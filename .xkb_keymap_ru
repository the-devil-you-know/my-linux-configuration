xkb_keymap {

    xkb_compat { include "complete" };

    xkb_geometry { include "pc(pc105)" };

    xkb_types { include "complete" };
    
    xkb_keycodes { include "evdev+aliases(qwerty)" };

    xkb_symbols {

        include "pc+ru"        


        // ////
        // Ctrl_l is mapped to the Alt_l, Alt_l to the Ctrl_l, Return to the Alt_r
        // If you don't need it, you can remove it safely

        key <RALT> { actions[Group1]=[ RedirectKey(keycode=<RTRN>) ] };
        key <LALT> { [ Control_L, Control_L ] };
        key <LCTL> { [ Alt_L ] };
        key <CAPS> { [ Mode_switch ] };

        modifier_map Control { <LALT> };
        modifier_map Mod1 { <LCTL> };

        // ////


        key <AD01> {
            symbols[Group1] = [ Cyrillic_be, Cyrillic_BE ]
        };
        key <AD06> {
            actions[Group2] = [ RedirectKey(keycode=<PGUP>) ]
        };
        key <AD07> {
            actions[Group2] = [ RedirectKey(keycode=<HOME>) ]
        };
        key <AD08> {
            actions[Group2] = [ RedirectKey(keycode=<UP>) ]
        };
        key <AD09> {
            actions[Group2] = [ RedirectKey(keycode=<END>) ]
        };
        key <AD10> {
            actions[Group2] = [ RedirectKey(keycode=<DELE>) ]
        };
    
        key <AC06> {
            actions[Group2] = [ RedirectKey(keycode=<PGDN>) ]
        };
        key <AC07> {
            actions[Group2] = [ RedirectKey(keycode=<LEFT>) ]
        };
        key <AC08> {
            actions[Group2] = [ RedirectKey(keycode=<DOWN>) ]
        };
        key <AC09> {
            actions[Group2] = [ RedirectKey(keycode=<RGHT>) ]
        };
        key <AC10> {
            actions[Group2] = [ RedirectKey(keycode=<BKSP>) ]
        };

        key <AB07> {
            symbols[Group2] = [ Cyrillic_shorti, Cyrillic_SHORTI ]
        };
        key <AB08> {
            symbols[Group1] = [ comma, less ]
        };
        key <AB09> {
            symbols[Group1] = [ period, greater ],
            symbols[Group2] = [ Cyrillic_yu, Cyrillic_YU ]
        };
        key <AB10> {
            symbols[Group1] = [ slash, question ]
        };
    };
};
